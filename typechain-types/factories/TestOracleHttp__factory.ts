/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestOracleHttp,
  TestOracleHttpInterface,
} from "../TestOracleHttp";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestHelloOracle",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004553480156200001657600080fd5b5062000027620000b860201b60201c565b73e86210795efd4896996bf3e498787fd09a112c58600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f333931383964663938306435343765333965303633393066323165636263633060088190555067016345785d8a000060098190555062000240565b6200015e73c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200011757600080fd5b505afa1580156200012c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001529190620001bb565b6200016060201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050620001b58162000226565b92915050565b600060208284031215620001d457620001d362000221565b5b6000620001e484828501620001a4565b91505092915050565b6000620001fa8262000201565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200023181620001ed565b81146200023d57600080fd5b50565b61138280620002506000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634357855e14610046578063c618a1e414610062578063f6f429f614610080575b600080fd5b610060600480360381019061005b9190610b85565b61009e565b005b61006a6101af565b6040516100779190610df8565b60405180910390f35b6100886101b5565b6040516100959190610d9d565b60405180910390f35b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013790610dd8565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a281600681905550505050565b60065481565b6000806101cc60085430634357855e60e01b610282565b905061024d6040518060400160405280600381526020017f67657400000000000000000000000000000000000000000000000000000000008152506040518060400160405280601a81526020017f687474703a2f2f3139322e3136382e302e3130333a333030302f000000000000815250836102b39092919063ffffffff16565b61027c600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826009546102e6565b91505090565b61028a610a92565b610292610a92565b6102a9858585846103b2909392919063ffffffff16565b9150509392505050565b6102ca82846080015161046290919063ffffffff16565b6102e181846080015161046290919063ffffffff16565b505050565b60008060045490506001816102fb9190610e40565b6004819055506000634042994660e01b60008087600001513089604001518760018c608001516000015160405160240161033c989796959493929190610cda565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506103a786838684610487565b925050509392505050565b6103ba610a92565b6103ca856080015161010061062b565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b61046f8260038351610695565b610482818361081a90919063ffffffff16565b505050565b6000308460405160200161049c929190610cae565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b815260040161059293929190610d5f565b602060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190610b58565b610623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061a90610db8565b60405180910390fd5b949350505050565b610633610aff565b600060208361064291906111aa565b1461066e5760208261065491906111aa565b60206106609190611061565b8261066b9190610e40565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff16116106cc576106c68160058460ff16901b60ff16178461083c90919063ffffffff16565b50610815565b60ff8167ffffffffffffffff1611610722576106fb601860058460ff16901b178461083c90919063ffffffff16565b5061071c8167ffffffffffffffff1660018561085c9092919063ffffffff16565b50610814565b61ffff8167ffffffffffffffff161161077957610752601960058460ff16901b178461083c90919063ffffffff16565b506107738167ffffffffffffffff1660028561085c9092919063ffffffff16565b50610813565b63ffffffff8167ffffffffffffffff16116107d2576107ab601a60058460ff16901b178461083c90919063ffffffff16565b506107cc8167ffffffffffffffff1660048561085c9092919063ffffffff16565b50610812565b6107ef601b60058460ff16901b178461083c90919063ffffffff16565b506108108167ffffffffffffffff1660088561085c9092919063ffffffff16565b505b5b5b5b505050565b610822610aff565b6108348384600001515184855161087e565b905092915050565b610844610aff565b610854838460000151518461096d565b905092915050565b610864610aff565b6108758485600001515185856109c4565b90509392505050565b610886610aff565b825182111561089457600080fd5b846020015182856108a59190610e40565b11156108da576108d98560026108ca886020015188876108c59190610e40565b610a52565b6108d49190611007565b610a6e565b5b6000808651805187602083010193508088870111156108f95787860182525b60208701925050505b60208410610940578051825260208261091b9190610e40565b915060208161092a9190610e40565b90506020846109399190611061565b9350610902565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b610975610aff565b8360200151831061099b5761099a84600286602001516109959190611007565b610a6e565b5b83518051602085830101848153818614156109b7576001820183525b5050508390509392505050565b6109cc610aff565b846020015184836109dd9190610e40565b1115610a0557610a0485600286856109f59190610e40565b6109ff9190611007565b610a6e565b5b6000600183610100610a179190610ee9565b610a219190611061565b90508551838682010185831982511617815281518588011115610a445784870182525b505085915050949350505050565b600081831115610a6457829050610a68565b8190505b92915050565b600082600001519050610a81838361062b565b50610a8c838261081a565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610af9610aff565b81525090565b604051806040016040528060608152602001600081525090565b600081519050610b2881611307565b92915050565b600081359050610b3d8161131e565b92915050565b600081359050610b5281611335565b92915050565b600060208284031215610b6e57610b6d611239565b5b6000610b7c84828501610b19565b91505092915050565b60008060408385031215610b9c57610b9b611239565b5b6000610baa85828601610b2e565b9250506020610bbb85828601610b43565b9150509250929050565b610bce81611095565b82525050565b610bdd816110b3565b82525050565b610bec816110bd565b82525050565b6000610bfd82610e13565b610c078185610e1e565b9350610c17818560208601611149565b610c208161123e565b840191505092915050565b610c3c610c3782611113565b61117c565b82525050565b6000610c4f602383610e2f565b9150610c5a82611269565b604082019050919050565b6000610c72602883610e2f565b9150610c7d826112b8565b604082019050919050565b610c9181611109565b82525050565b610ca8610ca382611109565b6111a0565b82525050565b6000610cba8285610c2b565b601482019150610cca8284610c97565b6020820191508190509392505050565b600061010082019050610cf0600083018b610bc5565b610cfd602083018a610c88565b610d0a6040830189610bd4565b610d176060830188610bc5565b610d246080830187610be3565b610d3160a0830186610c88565b610d3e60c0830185610c88565b81810360e0830152610d508184610bf2565b90509998505050505050505050565b6000606082019050610d746000830186610bc5565b610d816020830185610c88565b8181036040830152610d938184610bf2565b9050949350505050565b6000602082019050610db26000830184610bd4565b92915050565b60006020820190508181036000830152610dd181610c42565b9050919050565b60006020820190508181036000830152610df181610c65565b9050919050565b6000602082019050610e0d6000830184610c88565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e4b82611109565b9150610e5683611109565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e8b57610e8a6111db565b5b828201905092915050565b6000808291508390505b6001851115610ee057808604811115610ebc57610ebb6111db565b5b6001851615610ecb5780820291505b8081029050610ed98561125c565b9450610ea0565b94509492505050565b6000610ef482611109565b9150610eff83611109565b9250610f2c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610f34565b905092915050565b600082610f445760019050611000565b81610f525760009050611000565b8160018114610f685760028114610f7257610fa1565b6001915050611000565b60ff841115610f8457610f836111db565b5b8360020a915084821115610f9b57610f9a6111db565b5b50611000565b5060208310610133831016604e8410600b8410161715610fd65782820a905083811115610fd157610fd06111db565b5b611000565b610fe38484846001610e96565b92509050818404811115610ffa57610ff96111db565b5b81810290505b9392505050565b600061101282611109565b915061101d83611109565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611056576110556111db565b5b828202905092915050565b600061106c82611109565b915061107783611109565b92508282101561108a576110896111db565b5b828203905092915050565b60006110a0826110e9565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061111e82611125565b9050919050565b600061113082611137565b9050919050565b6000611142826110e9565b9050919050565b60005b8381101561116757808201518184015260208101905061114c565b83811115611176576000848401525b50505050565b60006111878261118e565b9050919050565b60006111998261124f565b9050919050565b6000819050919050565b60006111b582611109565b91506111c083611109565b9250826111d0576111cf61120a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160011c9050919050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b611310816110a7565b811461131b57600080fd5b50565b611327816110b3565b811461133257600080fd5b50565b61133e81611109565b811461134957600080fd5b5056fea26469706673582212208232545b98c2e3dabf9a45105538ca701a9495e9dea7177d663bd60eb536c52a64736f6c63430008070033";

type TestOracleHttpConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestOracleHttpConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestOracleHttp__factory extends ContractFactory {
  constructor(...args: TestOracleHttpConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestOracleHttp";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestOracleHttp> {
    return super.deploy(overrides || {}) as Promise<TestOracleHttp>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestOracleHttp {
    return super.attach(address) as TestOracleHttp;
  }
  connect(signer: Signer): TestOracleHttp__factory {
    return super.connect(signer) as TestOracleHttp__factory;
  }
  static readonly contractName: "TestOracleHttp";
  public readonly contractName: "TestOracleHttp";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOracleHttpInterface {
    return new utils.Interface(_abi) as TestOracleHttpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOracleHttp {
    return new Contract(address, _abi, signerOrProvider) as TestOracleHttp;
  }
}
